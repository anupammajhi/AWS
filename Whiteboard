Certainly! Here's an example PowerShell script that reads the AWS credentials file (`~\.aws\credentials`) and extracts the access key, secret key, and session token for a specified profile:

```powershell
# Specify the target AWS profile
$targetProfile = 'your_target_profile'

# Path to the AWS credentials file
$credentialsFilePath = Join-Path $env:USERPROFILE '.aws\credentials'

# Read the credentials file
$credentialsContent = Get-Content -Path $credentialsFilePath -Raw

# Create a regex pattern to match the specified profile
$pattern = "\[$targetProfile\]\s*`r?`naws_access_key_id\s*=\s*(?<AccessKey>.*?)`r?`naws_secret_access_key\s*=\s*(?<SecretKey>.*?)`r?`naws_session_token\s*=\s*(?<SessionToken>.*?)`r?`n"

# Match the pattern in the credentials content
$match = [Regex]::Match($credentialsContent, $pattern)

if ($match.Success) {
    # Extract values from the match
    $accessKey = $match.Groups['AccessKey'].Value
    $secretKey = $match.Groups['SecretKey'].Value
    $sessionToken = $match.Groups['SessionToken'].Value

    Write-Host "AWS Access Key: $accessKey"
    Write-Host "AWS Secret Key: $secretKey"
    Write-Host "AWS Session Token: $sessionToken"
} else {
    Write-Host "Profile '$targetProfile' not found in AWS credentials file."
}
```

Make sure to replace `'your_target_profile'` with the actual profile name for which you want to retrieve credentials. The script uses regular expressions to extract the relevant information from the credentials file. It then prints the access key, secret key, and session token for the specified profile if they are present.